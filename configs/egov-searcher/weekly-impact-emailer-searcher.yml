  SearchDefinitions:
   moduleName: impactemailer
   summary: Weekly impact emailer cron
   version: 1.0.0
   definitions:
   - name: stateWideData
     query: 
      baseQuery: select array_to_json(array_agg(row_to_json(stateWideReports))) from ((SELECT (SELECT count(*) FROM ((SELECT DISTINCT tenantid FROM eg_pt_property_v2 WHERE (createdtime/1000) < (extract(epoch from NOW())) AND tenantid != 'pb.testing') UNION (SELECT DISTINCT tenantid FROM eg_tl_tradelicense WHERE (createdtime/1000) < (extract(epoch from NOW())) AND tenantid != 'pb.testing') UNION (SELECT DISTINCT tenantid FROM eg_pgr_service WHERE (createdtime/1000) < (extract(epoch from NOW())) AND tenantid != 'pb.testing')) AS tenants) as ulbCovered, (SELECT TRUNC(SUM(ins.amount) / 10000000, 3) FROM eg_pt_property_v2 pt LEFT JOIN egcl_receiptheader rh ON pt.propertyid = SPLIT_PART(rh.consumercode, ':', 1) LEFT JOIN egcl_instrumentheader ins ON rh.transactionid = ins.transactionnumber WHERE (pt.createdtime/1000) < (extract(epoch from NOW())) AND pt.tenantid != 'pb.testing' AND rh.status != 'Cancelled') as revenueCollected, (SELECT (SELECT count(*) FROM eg_pt_property_v2 WHERE (createdtime/1000) < (extract(epoch from NOW())) AND tenantid != 'pb.testing') + (SELECT count(*) FROM eg_tl_tradelicense WHERE (createdtime/1000) < (extract(epoch from NOW())) AND tenantid != 'pb.testing')) as servicesApplied, (SELECT count(*) FROM eg_user WHERE (createddate < NOW()) AND tenantid != 'pb.testing') as noOfUsersRegistered, 'Week0' as day) UNION (SELECT (SELECT count(*) FROM ((SELECT DISTINCT tenantid FROM eg_pt_property_v2 WHERE (createdtime/1000) < ((extract(epoch from NOW())) - 604800) AND tenantid != 'pb.testing') UNION (SELECT DISTINCT tenantid FROM eg_tl_tradelicense WHERE (createdtime/1000) < ((extract(epoch from NOW())) - 604800) AND tenantid != 'pb.testing') UNION (SELECT DISTINCT tenantid FROM eg_pgr_service WHERE (createdtime/1000) < ((extract(epoch from NOW())) - 604800) AND tenantid != 'pb.testing')) AS tenants) as ulbCovered, (SELECT TRUNC(SUM(ins.amount) / 10000000, 3) FROM eg_pt_property_v2 pt INNER JOIN egcl_receiptheader rh ON pt.propertyid = SPLIT_PART(rh.consumercode, ':', 1) INNER JOIN egcl_receiptinstrument rins ON rh.id = rins.receiptheader INNER JOIN egcl_instrumentheader ins ON rins.instrumentheader = ins.id WHERE (createdtime/1000) < ((extract(epoch from NOW())) - 604800) AND pt.tenantid != 'pb.testing' AND rh.status != 'Cancelled') as revenueCollected, (SELECT (SELECT count(*) FROM eg_pt_property_v2 WHERE (createdtime/1000) < ((extract(epoch from NOW())) - 604800) AND tenantid != 'pb.testing') + (SELECT count(*) FROM eg_tl_tradelicense WHERE (createdtime/1000) < ((extract(epoch from NOW())) - 604800) AND tenantid != 'pb.testing')) as servicesApplied, (SELECT count(*) FROM eg_user WHERE createddate < to_timestamp((extract (epoch from NOW())) - 604800) AND tenantid != 'pb.testing') as noOfUsersRegistered, 'Week1' as day) UNION (SELECT (SELECT count(*) FROM ((SELECT DISTINCT tenantid FROM eg_pt_property_v2 WHERE (createdtime/1000) < ((extract(epoch from NOW())) - 604800 * 2) AND tenantid != 'pb.testing') UNION (SELECT DISTINCT tenantid FROM eg_tl_tradelicense WHERE (createdtime/1000) < ((extract(epoch from NOW())) - 604800 * 2) AND tenantid != 'pb.testing') UNION (SELECT DISTINCT tenantid FROM eg_pgr_service WHERE (createdtime/1000) < ((extract(epoch from NOW())) - 604800 * 2) AND tenantid != 'pb.testing')) AS tenants) as ulbCovered, (SELECT TRUNC(SUM(ins.amount) / 10000000, 3) FROM eg_pt_property_v2 pt INNER JOIN egcl_receiptheader rh ON pt.propertyid = SPLIT_PART(rh.consumercode, ':', 1) INNER JOIN egcl_receiptinstrument rins ON rh.id = rins.receiptheader INNER JOIN egcl_instrumentheader ins ON rins.instrumentheader = ins.id WHERE (createdtime/1000) < ((extract(epoch from NOW())) - 604800 * 2) AND pt.tenantid != 'pb.testing' AND rh.status != 'Cancelled') as revenueCollected, (SELECT (SELECT count(*) FROM eg_pt_property_v2 WHERE (createdtime/1000) < ((extract(epoch from NOW())) - 604800 * 2) AND tenantid != 'pb.testing') + (SELECT count(*) FROM eg_tl_tradelicense WHERE (createdtime/1000) < ((extract(epoch from NOW())) - 604800 * 2) AND tenantid != 'pb.testing')) as servicesApplied, (SELECT count(*) FROM eg_user WHERE createddate < to_timestamp((extract (epoch from NOW())) - 604800 * 2) AND tenantid != 'pb.testing') as noOfUsersRegistered, 'Week2' as day) UNION (SELECT (SELECT count(*) FROM ((SELECT DISTINCT tenantid FROM eg_pt_property_v2 WHERE (createdtime/1000) < ((extract(epoch from NOW())) - 604800 * 3) AND tenantid != 'pb.testing') UNION (SELECT DISTINCT tenantid FROM eg_tl_tradelicense WHERE (createdtime/1000) < ((extract(epoch from NOW())) - 604800 * 3) AND tenantid != 'pb.testing') UNION (SELECT DISTINCT tenantid FROM eg_pgr_service WHERE (createdtime/1000) < ((extract(epoch from NOW())) - 604800 * 3) AND tenantid != 'pb.testing')) AS tenants) as ulbCovered, (SELECT TRUNC(SUM(ins.amount) / 10000000, 3) FROM eg_pt_property_v2 pt INNER JOIN egcl_receiptheader rh ON pt.propertyid = SPLIT_PART(rh.consumercode, ':', 1) INNER JOIN egcl_receiptinstrument rins ON rh.id = rins.receiptheader INNER JOIN egcl_instrumentheader ins ON rins.instrumentheader = ins.id WHERE (createdtime/1000) < ((extract(epoch from NOW())) - 604800 * 3) AND pt.tenantid != 'pb.testing' AND rh.status != 'Cancelled') as revenueCollected, (SELECT (SELECT count(*) FROM eg_pt_property_v2 WHERE (createdtime/1000) < ((extract(epoch from NOW())) - 604800 * 3) AND tenantid != 'pb.testing') + (SELECT count(*) FROM eg_tl_tradelicense WHERE (createdtime/1000) < ((extract(epoch from NOW())) - 604800 * 3) AND tenantid != 'pb.testing')) as servicesApplied, (SELECT count(*) FROM eg_user WHERE createddate < to_timestamp((extract (epoch from NOW())) - 604800 * 3) AND tenantid != 'pb.testing') as noOfUsersRegistered, 'Week3' as day) UNION (SELECT (SELECT count(*) FROM ((SELECT DISTINCT tenantid FROM eg_pt_property_v2 WHERE (createdtime/1000) < ((extract(epoch from NOW())) - 604800 * 4) AND tenantid != 'pb.testing') UNION (SELECT DISTINCT tenantid FROM eg_tl_tradelicense WHERE (createdtime/1000) < ((extract(epoch from NOW())) - 604800 * 4) AND tenantid != 'pb.testing') UNION (SELECT DISTINCT tenantid FROM eg_pgr_service WHERE (createdtime/1000) < ((extract(epoch from NOW())) - 604800 * 4) AND tenantid != 'pb.testing')) AS tenants) as ulbCovered, (SELECT TRUNC(SUM(ins.amount) / 10000000, 3) FROM eg_pt_property_v2 pt INNER JOIN egcl_receiptheader rh ON pt.propertyid = SPLIT_PART(rh.consumercode, ':', 1) INNER JOIN egcl_receiptinstrument rins ON rh.id = rins.receiptheader INNER JOIN egcl_instrumentheader ins ON rins.instrumentheader = ins.id WHERE (createdtime/1000) < ((extract(epoch from NOW())) - 604800 * 4) AND pt.tenantid != 'pb.testing' AND rh.status != 'Cancelled') as revenueCollected, (SELECT (SELECT count(*) FROM eg_pt_property_v2 WHERE (createdtime/1000) < ((extract(epoch from NOW())) - 604800 * 4) AND tenantid != 'pb.testing') + (SELECT count(*) FROM eg_tl_tradelicense WHERE (createdtime/1000) < ((extract(epoch from NOW())) - 604800 * 4) AND tenantid != 'pb.testing')) as servicesApplied, (SELECT count(*) FROM eg_user WHERE createddate < to_timestamp((extract (epoch from NOW())) - 604800 * 4) AND tenantid != 'pb.testing') as noOfUsersRegistered, 'Week4' as day) UNION (SELECT (SELECT count(*) FROM ((SELECT DISTINCT tenantid FROM eg_pt_property_v2 WHERE (createdtime/1000) < ((extract(epoch from NOW())) - 604800 * 5) AND tenantid != 'pb.testing') UNION (SELECT DISTINCT tenantid FROM eg_tl_tradelicense WHERE (createdtime/1000) < ((extract(epoch from NOW())) - 604800 * 5) AND tenantid != 'pb.testing') UNION (SELECT DISTINCT tenantid FROM eg_pgr_service WHERE (createdtime/1000) < ((extract(epoch from NOW())) - 604800 * 5) AND tenantid != 'pb.testing')) AS tenants) as ulbCovered, (SELECT TRUNC(SUM(ins.amount) / 10000000, 3) FROM eg_pt_property_v2 pt INNER JOIN egcl_receiptheader rh ON pt.propertyid = SPLIT_PART(rh.consumercode, ':', 1) INNER JOIN egcl_receiptinstrument rins ON rh.id = rins.receiptheader INNER JOIN egcl_instrumentheader ins ON rins.instrumentheader = ins.id WHERE (createdtime/1000) < ((extract(epoch from NOW())) - 604800 * 5) AND pt.tenantid != 'pb.testing' AND rh.status != 'Cancelled') as revenueCollected, (SELECT (SELECT count(*) FROM eg_pt_property_v2 WHERE (createdtime/1000) < ((extract(epoch from NOW())) - 604800 * 5) AND tenantid != 'pb.testing') + (SELECT count(*) FROM eg_tl_tradelicense WHERE (createdtime/1000) < ((extract(epoch from NOW())) - 604800 * 5) AND tenantid != 'pb.testing')) as servicesApplied, (SELECT count(*) FROM eg_user WHERE createddate < to_timestamp((extract (epoch from NOW())) - 604800 * 5) AND tenantid != 'pb.testing') as noOfUsersRegistered, 'Week5' as day) ) stateWideReports
     searchParams:
      condition: AND
      params:
      - name: intervalinsecs
        isMandatory: true
        jsonPath: $.searchCriteria.intervalinsecs
  
     output:
      jsonFormat: {"ResponseInfo": {}}
      outJsonPath: $.data
      responseInfoPath: $.ResponseInfo
      
      
      
   - name: pgrData
     query: 
      baseQuery: select array_to_json(array_agg(row_to_json(pgrReports))) from ((SELECT count(DISTINCT tenantid) as ulbCovered, count(*) as totalComplaints, (SELECT (CASE WHEN ((SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) < (extract (epoch from NOW())) AND tenantid != 'pb.testing') != 0) THEN CONCAT(((SELECT count(*) FROM eg_pgr_service WHERE status = 'closed' OR status = 'resolved' AND (createdtime/1000) < (extract (epoch from NOW())) AND tenantid != 'pb.testing') * 100 / (SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) < (extract (epoch from NOW())) AND tenantid != 'pb.testing')), '%') ELSE '0%' END) as redressal), 'Week0' as day FROM eg_pgr_service WHERE (createdtime/1000) < (extract (epoch from NOW())) AND tenantid != 'pb.testing') UNION (SELECT count(DISTINCT tenantid) as ulbCovered, count(*) as totalComplaints, (SELECT (CASE WHEN (SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) < ((extract(epoch from NOW())) - 604800) AND tenantid != 'pb.testing') != 0 THEN CONCAT(((SELECT count(*) FROM eg_pgr_service WHERE status = 'closed' OR status = 'resolved' AND (createdtime/1000) < ((extract(epoch from NOW())) - 604800) AND tenantid != 'pb.testing') * 100 / (SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) < ((extract(epoch from NOW())) - 604800) AND tenantid != 'pb.testing')), '%') ELSE '0%' END) as redressal), 'Week1' as day FROM eg_pgr_service WHERE (createdtime/1000) < ((extract(epoch from NOW())) - 604800) AND tenantid != 'pb.testing') UNION (SELECT count(DISTINCT tenantid) as ulbCovered, count(*) as totalComplaints, (SELECT (CASE WHEN (SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) < ((extract(epoch from NOW())) - 604800 * 2) AND tenantid != 'pb.testing') != 0 THEN CONCAT(((SELECT count(*) FROM eg_pgr_service WHERE status = 'closed' OR status = 'resolved' AND (createdtime/1000) < ((extract(epoch from NOW())) - 604800 * 2) AND tenantid != 'pb.testing') * 100 / (SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) < ((extract(epoch from NOW())) - 604800 * 2) AND tenantid != 'pb.testing')), '%') ELSE '0%' END) as redressal), 'Week2' as day FROM eg_pgr_service WHERE (createdtime/1000) < ((extract(epoch from NOW())) - 604800 * 2) AND tenantid != 'pb.testing') UNION (SELECT count(DISTINCT tenantid) as ulbCovered, count(*) as totalComplaints, (SELECT (CASE WHEN (SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) < ((extract(epoch from NOW())) - 604800 * 3) AND tenantid != 'pb.testing') != 0  THEN CONCAT(((SELECT count(*) FROM eg_pgr_service WHERE status = 'closed' OR status = 'resolved' AND (createdtime/1000) < ((extract(epoch from NOW())) - 604800 * 3) AND tenantid != 'pb.testing') * 100 / (SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) < ((extract(epoch from NOW())) - 604800 * 3) AND tenantid != 'pb.testing')), '%') ELSE '0%' END) as redressal), 'Week3' as day FROM eg_pgr_service WHERE (createdtime/1000) < ((extract(epoch from NOW())) - 604800 * 3) AND tenantid != 'pb.testing') UNION (SELECT count(DISTINCT tenantid) as ulbCovered, count(*) as totalComplaints, (SELECT (CASE WHEN (SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) < ((extract(epoch from NOW())) - 604800 * 4) AND tenantid != 'pb.testing') != 0 THEN CONCAT(((SELECT count(*) FROM eg_pgr_service WHERE status = 'closed' OR status = 'resolved' AND (createdtime/1000) < ((extract(epoch from NOW())) - 604800 * 4) AND tenantid != 'pb.testing') * 100 / (SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) < ((extract(epoch from NOW())) - 604800 * 4) AND tenantid != 'pb.testing')), '%') ELSE '0%' END) as redressal), 'Week4' as day FROM eg_pgr_service WHERE (createdtime/1000) < ((extract(epoch from NOW())) - 604800 * 4) AND tenantid != 'pb.testing') UNION (SELECT count(DISTINCT tenantid) as ulbCovered, count(*) as totalComplaints, (SELECT (CASE WHEN (SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) < ((extract(epoch from NOW())) - 604800 * 5) AND tenantid != 'pb.testing') != 0 THEN CONCAT(((SELECT count(*) FROM eg_pgr_service WHERE status = 'closed' OR status = 'resolved' AND (createdtime/1000) < ((extract(epoch from NOW())) - 604800 * 5) AND tenantid != 'pb.testing') * 100 / (SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) < ((extract(epoch from NOW())) - 604800 * 5) AND tenantid != 'pb.testing')), '%') ELSE '0%' END) as redressal), 'Week5' as day FROM eg_pgr_service WHERE (createdtime/1000) < ((extract(epoch from NOW())) - 604800 * 5) AND tenantid != 'pb.testing')) pgrReports
     searchParams:
      condition: AND
      params:
      - name: intervalinsecs
        isMandatory: true
        jsonPath: $.searchCriteria.intervalinsecs
  
     output:
      jsonFormat: {"ResponseInfo": {}}
      outJsonPath: $.data
      responseInfoPath: $.ResponseInfo      
      
      
   - name: pgrChannelData
     query: 
      baseQuery: select array_to_json(array_agg(row_to_json(pgrChannel))) from ((SELECT (SELECT (CASE WHEN ((SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) < (extract (epoch from NOW())) AND tenantid != 'pb.testing') != 0) THEN CONCAT(((SELECT count(*) FROM eg_pgr_service WHERE source = 'ivr' AND (createdtime/1000) < (extract (epoch from NOW())) AND tenantid != 'pb.testing') * 100 / (SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) < (extract (epoch from NOW())) AND tenantid != 'pb.testing')), '%') ELSE '0%' END) as ivr), (SELECT (CASE WHEN ((SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) < (extract (epoch from NOW())) AND tenantid != 'pb.testing') != 0) THEN CONCAT(((SELECT count(*) FROM eg_pgr_service WHERE source = 'web' AND (createdtime/1000) < (extract (epoch from NOW())) AND tenantid != 'pb.testing') * 100 / (SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) < (extract (epoch from NOW())) AND tenantid != 'pb.testing')), '%') ELSE '0%' END) as webapp), (SELECT (CASE WHEN ((SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) < (extract (epoch from NOW())) AND tenantid != 'pb.testing') != 0) THEN CONCAT(((SELECT count(*) FROM eg_pgr_service WHERE source = 'mobileapp' AND (createdtime/1000) < (extract (epoch from NOW())) AND tenantid != 'pb.testing') * 100 / (SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) < (extract (epoch from NOW())) AND tenantid != 'pb.testing')), '%') ELSE '0%' END) as mobileapp), 'Week0' as day FROM eg_pgr_service LIMIT 1) UNION (SELECT (SELECT (CASE WHEN ((SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) < ((extract(epoch from NOW())) - 604800) AND tenantid != 'pb.testing') != 0) THEN CONCAT(((SELECT count(*) FROM eg_pgr_service WHERE source = 'ivr' AND (createdtime/1000) < ((extract(epoch from NOW())) - 604800) AND tenantid != 'pb.testing') * 100 / (SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) < ((extract(epoch from NOW())) - 604800) AND tenantid != 'pb.testing')), '%') ELSE '0%' END) as redressal), (SELECT (CASE WHEN ((SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) < ((extract(epoch from NOW())) - 604800) AND tenantid != 'pb.testing') != 0) THEN CONCAT(((SELECT count(*) FROM eg_pgr_service WHERE source = 'web' AND (createdtime/1000) < ((extract(epoch from NOW())) - 604800) AND tenantid != 'pb.testing') * 100 / (SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) < ((extract(epoch from NOW())) - 604800) AND tenantid != 'pb.testing')), '%') ELSE '0%' END) as redressal), (SELECT (CASE WHEN ((SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) < ((extract(epoch from NOW())) - 604800) AND tenantid != 'pb.testing') != 0) THEN CONCAT(((SELECT count(*) FROM eg_pgr_service WHERE source = 'mobileapp' AND (createdtime/1000) < ((extract(epoch from NOW())) - 604800) AND tenantid != 'pb.testing') * 100 / (SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) < ((extract(epoch from NOW())) - 604800) AND tenantid != 'pb.testing')), '%') ELSE '0%' END) as redressal), 'Week1' as day FROM eg_pgr_service LIMIT 1) UNION (SELECT (SELECT (CASE WHEN ((SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) < ((extract(epoch from NOW())) - 604800 * 2) AND tenantid != 'pb.testing') != 0) THEN CONCAT(((SELECT count(*) FROM eg_pgr_service WHERE source = 'ivr' AND (createdtime/1000) < ((extract(epoch from NOW())) - 604800 * 2) AND tenantid != 'pb.testing') * 100 / (SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) < ((extract(epoch from NOW())) - 604800) AND tenantid != 'pb.testing')), '%') ELSE '0%' END) as redressal), (SELECT (CASE WHEN ((SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) < ((extract(epoch from NOW())) - 604800 * 2) AND tenantid != 'pb.testing') != 0) THEN CONCAT(((SELECT count(*) FROM eg_pgr_service WHERE source = 'web' AND (createdtime/1000) < ((extract(epoch from NOW())) - 604800 * 2) AND tenantid != 'pb.testing') * 100 / (SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) < ((extract(epoch from NOW())) - 604800 * 2) AND tenantid != 'pb.testing')), '%') ELSE '0%' END) as redressal), (SELECT (CASE WHEN ((SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) < ((extract(epoch from NOW())) - 604800 * 2) AND tenantid != 'pb.testing') != 0) THEN CONCAT(((SELECT count(*) FROM eg_pgr_service WHERE source = 'mobileapp' AND (createdtime/1000) < ((extract(epoch from NOW())) - 604800 * 2) AND tenantid != 'pb.testing') * 100 / (SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) < ((extract(epoch from NOW())) - 604800 * 2) AND tenantid != 'pb.testing')), '%') ELSE '0%' END) as redressal), 'Week2' as day FROM eg_pgr_service LIMIT 1) UNION (SELECT (SELECT (CASE WHEN ((SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) < ((extract(epoch from NOW())) - 604800 * 3) AND tenantid != 'pb.testing') != 0) THEN CONCAT(((SELECT count(*) FROM eg_pgr_service WHERE source = 'ivr' AND (createdtime/1000) < ((extract(epoch from NOW())) - 604800 * 3) AND tenantid != 'pb.testing') * 100 / (SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) < ((extract(epoch from NOW())) - 604800 * 3) AND tenantid != 'pb.testing')), '%') ELSE '0%' END) as redressal), (SELECT (CASE WHEN ((SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) < ((extract(epoch from NOW())) - 604800 * 3) AND tenantid != 'pb.testing') != 0) THEN CONCAT(((SELECT count(*) FROM eg_pgr_service WHERE source = 'web' AND (createdtime/1000) < ((extract(epoch from NOW())) - 604800 * 3) AND tenantid != 'pb.testing') * 100 / (SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) < ((extract(epoch from NOW())) - 604800 * 3) AND tenantid != 'pb.testing')), '%') ELSE '0%' END) as redressal), (SELECT (CASE WHEN ((SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) < ((extract(epoch from NOW())) - 604800 * 3) AND tenantid != 'pb.testing') != 0) THEN CONCAT(((SELECT count(*) FROM eg_pgr_service WHERE source = 'mobileapp' AND (createdtime/1000) < ((extract(epoch from NOW())) - 604800 * 3) AND tenantid != 'pb.testing') * 100 / (SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) < ((extract(epoch from NOW())) - 604800 * 3) AND tenantid != 'pb.testing')), '%') ELSE '0%' END) as redressal), 'Week3' as day FROM eg_pgr_service LIMIT 1) UNION(SELECT (SELECT (CASE WHEN ((SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) < ((extract(epoch from NOW())) - 604800 * 4) AND tenantid != 'pb.testing') != 0) THEN CONCAT(((SELECT count(*) FROM eg_pgr_service WHERE source = 'ivr' AND (createdtime/1000) < ((extract(epoch from NOW())) - 604800 * 4) AND tenantid != 'pb.testing') * 100 / (SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) < ((extract(epoch from NOW())) - 604800 * 4) AND tenantid != 'pb.testing')), '%') ELSE '0%' END) as redressal), (SELECT (CASE WHEN ((SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) < ((extract(epoch from NOW())) - 604800 * 4) AND tenantid != 'pb.testing') != 0) THEN CONCAT(((SELECT count(*) FROM eg_pgr_service WHERE source = 'web' AND (createdtime/1000) < ((extract(epoch from NOW())) - 604800 * 4) AND tenantid != 'pb.testing') * 100 / (SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) < ((extract(epoch from NOW())) - 604800 * 4) AND tenantid != 'pb.testing')), '%') ELSE '0%' END) as redressal), (SELECT (CASE WHEN ((SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) < ((extract(epoch from NOW())) - 604800 * 4) AND tenantid != 'pb.testing') != 0) THEN CONCAT(((SELECT count(*) FROM eg_pgr_service WHERE source = 'mobileapp' AND (createdtime/1000) < ((extract(epoch from NOW())) - 604800 * 4) AND tenantid != 'pb.testing') * 100 / (SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) < ((extract(epoch from NOW())) - 604800 * 4) AND tenantid != 'pb.testing')), '%') ELSE '0%' END) as redressal), 'Week4' as day FROM eg_pgr_service LIMIT 1) UNION (SELECT (SELECT (CASE WHEN ((SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) < ((extract(epoch from NOW())) - 604800 * 5) AND tenantid != 'pb.testing') != 0) THEN CONCAT(((SELECT count(*) FROM eg_pgr_service WHERE source = 'ivr' AND (createdtime/1000) < ((extract(epoch from NOW())) - 604800 * 5) AND tenantid != 'pb.testing') * 100 / (SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) < ((extract(epoch from NOW())) - 604800 * 5) AND tenantid != 'pb.testing')), '%') ELSE '0%' END) as redressal), (SELECT (CASE WHEN ((SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) < ((extract(epoch from NOW())) - 604800 * 5) AND tenantid != 'pb.testing') != 0) THEN CONCAT(((SELECT count(*) FROM eg_pgr_service WHERE source = 'web' AND (createdtime/1000) < ((extract(epoch from NOW())) - 604800 * 5) AND tenantid != 'pb.testing') * 100 / (SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) < ((extract(epoch from NOW())) - 604800 * 5) AND tenantid != 'pb.testing')), '%') ELSE '0%' END) as redressal), (SELECT (CASE WHEN ((SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) < ((extract(epoch from NOW())) - 604800) AND tenantid != 'pb.testing') != 0) THEN CONCAT(((SELECT count(*) FROM eg_pgr_service WHERE source = 'mobileapp' AND (createdtime/1000) < ((extract(epoch from NOW())) - 604800 * 5) AND tenantid != 'pb.testing') * 100 / (SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) < ((extract(epoch from NOW())) - 604800 * 5) AND tenantid != 'pb.testing')), '%') ELSE '0%' END) as redressal), 'Week5' as day FROM eg_pgr_service LIMIT 1)) pgrChannel
     searchParams:
      condition: AND
      params:
      - name: intervalinsecs
        isMandatory: true
        jsonPath: $.searchCriteria.intervalinsecs
  
     output:
      jsonFormat: {"ResponseInfo": {}}
      outJsonPath: $.data
      responseInfoPath: $.ResponseInfo
      
      
      
   - name: ptData
     query: 
      baseQuery: select array_to_json(array_agg(row_to_json(ptReports))) from ((SELECT count(DISTINCT pt.tenantid) as ulbcovered, TRUNC(SUM(ins.amount) / 10000000, 3) as revenuecollected, CONCAT((count(DISTINCT pt.propertyid) / 1000), '.', MOD(count(DISTINCT pt.propertyid), 1000)) as noofpropertiescreated, 'Week0' as day FROM eg_pt_property_v2 pt INNER JOIN egcl_receiptheader rh ON pt.propertyid = SPLIT_PART(rh.consumercode, ':', 1) INNER JOIN egcl_receiptinstrument rins ON rh.id = rins.receiptheader INNER JOIN egcl_instrumentheader ins ON rins.instrumentheader = ins.id WHERE (pt.createdtime/1000) < (extract(epoch from NOW())) AND pt.tenantid != 'pb.testing' AND rh.status != 'Cancelled') UNION (SELECT count(DISTINCT pt.tenantid) as ulbcovered, TRUNC(SUM(ins.amount) / 10000000, 3) as revenuecollected, CONCAT((count(DISTINCT pt.propertyid) / 1000), '.', MOD(count(DISTINCT pt.propertyid), 1000)) as noofpropertiescreated, 'Week1' as day FROM eg_pt_property_v2 pt INNER JOIN egcl_receiptheader rh ON pt.propertyid = SPLIT_PART(rh.consumercode, ':', 1) INNER JOIN egcl_receiptinstrument rins ON rh.id = rins.receiptheader INNER JOIN egcl_instrumentheader ins ON rins.instrumentheader = ins.id WHERE (pt.createdtime/1000) < ((extract(epoch from NOW())) - 604800) AND pt.tenantid != 'pb.testing' AND rh.status != 'Cancelled') UNION (SELECT count(DISTINCT pt.tenantid) as ulbcovered, TRUNC(SUM(ins.amount) / 10000000, 3) as revenuecollected, CONCAT((count(DISTINCT pt.propertyid) / 1000), '.', MOD(count(DISTINCT pt.propertyid), 1000)) as noofpropertiescreated, 'Week2' as day FROM eg_pt_property_v2 pt INNER JOIN egcl_receiptheader rh ON pt.propertyid = SPLIT_PART(rh.consumercode, ':', 1) INNER JOIN egcl_receiptinstrument rins ON rh.id = rins.receiptheader INNER JOIN egcl_instrumentheader ins ON rins.instrumentheader = ins.id WHERE (pt.createdtime/1000) < ((extract(epoch from NOW())) - 604800 * 2) AND pt.tenantid != 'pb.testing' AND rh.status != 'Cancelled') UNION (SELECT count(DISTINCT pt.tenantid) as ulbcovered, TRUNC(SUM(ins.amount) / 10000000, 3) as revenuecollected, CONCAT((count(DISTINCT pt.propertyid) / 1000), '.', MOD(count(DISTINCT pt.propertyid), 1000)) as noofpropertiescreated, 'Week3' as day FROM eg_pt_property_v2 pt INNER JOIN egcl_receiptheader rh ON pt.propertyid = SPLIT_PART(rh.consumercode, ':', 1) INNER JOIN egcl_receiptinstrument rins ON rh.id = rins.receiptheader INNER JOIN egcl_instrumentheader ins ON rins.instrumentheader = ins.id WHERE (pt.createdtime/1000) < ((extract(epoch from NOW())) - 604800 * 3) AND pt.tenantid != 'pb.testing' AND rh.status != 'Cancelled') UNION (SELECT count(DISTINCT pt.tenantid) as ulbcovered, TRUNC(SUM(ins.amount) / 10000000, 3) as revenuecollected, CONCAT((count(DISTINCT pt.propertyid) / 1000), '.', MOD(count(DISTINCT pt.propertyid), 1000)) as noofpropertiescreated, 'Week4' as day FROM eg_pt_property_v2 pt INNER JOIN egcl_receiptheader rh ON pt.propertyid = SPLIT_PART(rh.consumercode, ':', 1) INNER JOIN egcl_receiptinstrument rins ON rh.id = rins.receiptheader INNER JOIN egcl_instrumentheader ins ON rins.instrumentheader = ins.id WHERE (pt.createdtime/1000) < ((extract(epoch from NOW())) - 604800 * 4) AND pt.tenantid != 'pb.testing' AND rh.status != 'Cancelled') UNION (SELECT count(DISTINCT pt.tenantid) as ulbcovered, TRUNC(SUM(ins.amount) / 10000000, 3) as revenuecollected, CONCAT((count(DISTINCT pt.propertyid) / 1000), '.', MOD(count(DISTINCT pt.propertyid), 1000)) as noofpropertiescreated, 'Week5' as day FROM eg_pt_property_v2 pt INNER JOIN egcl_receiptheader rh ON pt.propertyid = SPLIT_PART(rh.consumercode, ':', 1) INNER JOIN egcl_receiptinstrument rins ON rh.id = rins.receiptheader INNER JOIN egcl_instrumentheader ins ON rins.instrumentheader = ins.id WHERE (pt.createdtime/1000) < ((extract(epoch from NOW())) - 604800 * 5) AND pt.tenantid != 'pb.testing' AND rh.status != 'Cancelled')) ptReports
     searchParams:
      condition: AND
      params:
      params:
      - name: intervalinsecs
        isMandatory: true
        jsonPath: $.searchCriteria.intervalinsecs
  
     output:
      jsonFormat: {"ResponseInfo": {}}
      outJsonPath: $.data
      responseInfoPath: $.ResponseInfo
      
      
      
   - name: tlData
     query: 
      baseQuery: select array_to_json(array_agg(row_to_json(tlReports))) from (SELECT count(DISTINCT tenantid) as ulbCovered, count(*) as licenseIssued, 'Week0' as day FROM eg_tl_tradelicense WHERE (createdtime/1000) < (extract (epoch from NOW())) AND tenantid != 'pb.testing' UNION SELECT count(DISTINCT tenantid) as ulbCovered, count(*) as licenseIssued, 'Week1' as day FROM eg_tl_tradelicense WHERE (createdtime/1000) < ((extract(epoch from NOW())) - 604800) AND tenantid != 'pb.testing' UNION SELECT count(DISTINCT tenantid) as ulbCovered, count(*) as licenseIssued, 'Week2' as day FROM eg_tl_tradelicense WHERE (createdtime/1000) < ((extract(epoch from NOW())) - 604800 * 2) AND tenantid != 'pb.testing' UNION SELECT count(DISTINCT tenantid) as ulbCovered, count(*) as licenseIssued, 'Week3' as day FROM eg_tl_tradelicense WHERE (createdtime/1000) < ((extract(epoch from NOW())) - 604800 * 3) AND tenantid != 'pb.testing' UNION SELECT count(DISTINCT tenantid) as ulbCovered, count(*) as licenseIssued, 'Week4' as day FROM eg_tl_tradelicense WHERE (createdtime/1000) < ((extract(epoch from NOW())) - 604800 * 4) AND tenantid != 'pb.testing' UNION SELECT count(DISTINCT tenantid) as ulbCovered, count(*) as licenseIssued, 'Week5' as day FROM eg_tl_tradelicense WHERE (createdtime/1000) < ((extract(epoch from NOW())) - 604800 * 5) AND tenantid != 'pb.testing') tlReports
     searchParams:
      condition: AND
      params:
      params:
      - name: intervalinsecs
        isMandatory: true
        jsonPath: $.searchCriteria.intervalinsecs
  
     output:
      jsonFormat: {"ResponseInfo": {}}
      outJsonPath: $.data
      responseInfoPath: $.ResponseInfo

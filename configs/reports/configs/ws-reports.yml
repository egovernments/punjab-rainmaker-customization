---
ReportDefinitions:
- reportName: ReceiptRegisterSW
  summary: Receipt Register
  version: 1.0.0
  moduleName: rainmaker-ws
  additionalConfig:
    print:
      pdfPageSize: "A1"
  sourceColumns:
  - name: connectionno
    label: reports.ws.connectionno
    type: string
    source: ws
    total: false
  - name: consumercode
    label: reports.ws.consumercode
    type: string
    source: ws
    total: false
  - name: receiptdate
    label: reports.ws.receiptdate
    type: string
    source: ws
    total: false
  - name: receiptnumber
    label: reports.ws.receiptnumber
    type: string
    source: ws
    total: false
  - name: instrumenttype
    label: reports.ws.instrumenttype
    type: string
    source: ws
    total: false
  - name: bankname
    label: reports.ws.bankname
    type: string
    source: ws
    total: false
  - name: transactionnumber
    label: reports.ws.transactionnumber
    type: string
    source: ws
    total: false
  - name: transactiondate
    label: reports.ws.transactiondate
    type: string
    source: ws
    total: false
  - name: billperiod
    label: reports.ws.billperiod
    type: string
    source: ws
    total: false
  - name: amount
    label: reports.ws.amount
    type: string
    source: ws
    total: true
  - name: pendingamount
    label: reports.ws.pendingamount
    type: string
    source: ws
    total: true
  - name: usagetype
    label: reports.ws.usagetype
    type: string
    source: ws
    total: false
  - name: adhocpenalty
    label: reports.ws.adhocpenalty
    type: string
    source: ws
    total: true
  - name: adhocrebate
    label: reports.ws.adhocrebate
    type: string
    source: ws
    total: true
  - name: compositionfee
    label: reports.ws.compositionfee
    type: string
    source: ws
    total: true
  - name: connectionfee
    label: reports.ws.connectionfee
    type: string
    source: ws
    total: true
  - name: roundoff
    label: reports.ws.roundoff
    type: string
    source: ws
    total: true
  - name: formfee
    label: reports.ws.formfee
    type: string
    source: ws
    total: true
  - name: onetimefee
    label: reports.ws.onetimefee
    type: string
    source: ws
    total: true
  - name: othercharge
    label: reports.ws.othercharge
    type: string
    source: ws
    total: true
  - name: otherfee
    label: reports.ws.otherfee
    type: string
    source: ws
    total: true
  - name: roadcuttingcharge
    label: reports.ws.roadcuttingcharge
    type: string
    source: ws
    total: true
  - name: securityfee
    label: reports.ws.securityfee
    type: string
    source: ws
    total: true
  - name: securitycharge
    label: reports.ws.securitycharge
    type: string
    source: ws
    total: true
  - name: taxandcess
    label: reports.ws.interest
    type: string
    source: ws
    total: true
  - name: usercharge
    label: reports.ws.usercharge
    type: string
    source: ws
    total: true
  - name: g8issuedate
    label: reports.ws.g8issuedate
    type: string
    source: ws
    total: false
  - name: g8receiptno
    label: reports.ws.g8receiptno
    type: string
    source: ws
    total: false
  query: |
    -- Use CTE to force query plan, compute & use CTE later
    WITH receipt_breakup AS 
    (
        SELECT
            pd.id as pdid,
            SUM(CASE WHEN taxheadcode LIKE 'SW_ADHOC_PENALTY' THEN adjustedamount ELSE 0 END) as adhocpenalty, 
            SUM(CASE WHEN taxheadcode LIKE 'SW_ADHOC_REBATE' THEN adjustedamount ELSE 0 END) as adhocrebate, 
            SUM(CASE WHEN taxheadcode LIKE 'SW_COMPOSITION_FEE' THEN adjustedamount ELSE 0 END) as compositionfee, 
            SUM(CASE WHEN taxheadcode LIKE 'SW_CONNECTION_FEE' THEN adjustedamount ELSE 0 END) as connectionfee, 
            SUM(CASE WHEN taxheadcode LIKE 'SW_FEE_ROUND_OFF' THEN adjustedamount ELSE 0 END) as roundoff, 
            SUM(CASE WHEN taxheadcode LIKE 'SW_FORM_FEE' THEN adjustedamount ELSE 0 END) as formfee, 
            SUM(CASE WHEN taxheadcode LIKE 'SW_ONE_TIME_FEE' THEN adjustedamount ELSE 0 END) as onetimefee,
            SUM(CASE WHEN taxheadcode LIKE 'SW_OTHER_CHARGE' THEN bad.amount ELSE 0 END) as othercharge,
            SUM(CASE WHEN taxheadcode LIKE 'SW_OTHER_FEE' THEN adjustedamount ELSE 0 END) as otherfee, 
            SUM(CASE WHEN taxheadcode LIKE 'SW_ROAD_CUTTING_CHARGE' THEN bad.amount ELSE 0 END) as roadcuttingcharge,
            SUM(CASE WHEN taxheadcode LIKE 'SW_SCRUTINY_FEE' THEN bad.amount ELSE 0 END)  as scrutinyfee,
            SUM(CASE WHEN taxheadcode LIKE 'SW_SECURITY_CHARGE' THEN adjustedamount ELSE 0 END) as securitycharge,
            SUM(CASE WHEN taxheadcode LIKE 'SW_TAX_AND_CESS' THEN adjustedamount ELSE 0 END) as taxandcess,
            SUM(CASE WHEN taxheadcode LIKE 'SW_USER_CHARGE' THEN adjustedamount ELSE 0 END) as usercharge				 
        FROM egcl_billaccountdetail as bad
        INNER JOIN egcl_billdetial as bd on bd.id = bad.billdetailid
        INNER JOIN egcl_paymentdetail as pd on pd.billid = bd.billid
        INNER JOIN egcl_payment as payment on pd.paymentid=payment.id
        WHERE payment.tenantid = $tenantid and payment.paymentstatus != 'CANCELLED' and  pd.businessservice like 'SW%'
        group by pdid
    )
    SELECT
        --count(*)	
        pd.tenantid AS tenantid,
        pd.id,
        pt.propertyid as consumercode,
        to_char((To_timestamp(pd.receiptdate/1000) at time Zone 'Asia/Kolkata'),'DD-MM-YYYY')  AS receiptdate,
        payment.ifsccode AS bankname, 
        receiptnumber,
        payment.totalamountpaid as amount, 
        payment.paymentmode as instrumenttype, 
        payment.transactionnumber,
        concat(to_char((To_timestamp(get_fromperiod(pd.billid)/1000) at time Zone 'Asia/Kolkata'),'DD-MM-YYYY'),'-', to_char((To_timestamp(get_toperiod(pd.billid)/1000) at time Zone 'Asia/Kolkata'),'DD-MM-YYYY')) as billperiod, 
        to_char((To_timestamp(payment.transactiondate/1000) at time Zone 'Asia/Kolkata'),'DD-MM-YYYY') AS transactiondate, 
        payment.totaldue - payment.totalamountpaid AS pendingamount,
        Initcap(case when pt.usagecategory like '%.%' then split_part(pt.usagecategory,'.',2) else pt.usagecategory end) as usagetype,
        (case when eg_user.name is null then '30048|21Fj+c3k2ldB0X3AzIh7atXB' else eg_user.name end)  as collectorname,
        receipt_breakup.*,
        to_char((To_timestamp(pd.manualreceiptdate/1000) at time Zone 'Asia/Kolkata'),'DD-MM-YYYY') AS g8issuedate, 
        manualreceiptnumber as g8receiptno
      FROM egcl_paymentdetail pd Left outer join eg_user on eg_user.id = pd.createdby::INTEGER, egcl_payment payment, eg_pt_property as pt, receipt_breakup, egcl_bill bill, eg_sw_connection
      --(select string_agg(distinct propertyid,',') as propertyid, string_agg(distinct locality,',') as locality from eg_pt_address where tenantid=$tenantid group by propertyid ) pt_addr
      where pd.paymentid=payment.id and bill.id=pd.billid and payment.paymentstatus != 'CANCELLED' and pd.businessservice like 'SW%' and payment.tenantid=$tenantid 
      and pt.id = eg_sw_connection.property_id 
      and receipt_breakup.pdid=pd.id  
      and pt.status!='INACTIVE' 
      --and pt_addr.propertyid=pt.id 
      --and pt.propertyid='PT-1012-978737'
      --and receiptnumber='PT/1012/2020-21/001021'
  orderby: ORDER BY pd.receiptdate DESC;
  
- reportName: BaseRegisterReportWS
  summary: Base Register Report WS
  version: 1.0.0
  moduleName: rainmaker-ws
  additionalConfig:
    print:
      pdfPageSize: "A1"
  sourceColumns:
  - name: connectionno
    label: reports.ws.connectionno
    type: string
    source: ws
    total: false
  - name: plotsize
    label: reports.ws.plotsize
    type: string
    source: ws
    total: false
  - name: applicationno
    label: reports.ws.applicationno
    type: string
    source: ws
    total: false
  - name: propertyid
    label: reports.ws.propertyid
    type: string
    source: ws
    total: false
  - name: userid
    label: reports.ws.userid
    type: string
    source: ws
    total: false
  - name: connectionholdertype
    label: reports.ws.connectionholdertype
    type: string
    source: ws
    total: false
  - name: applicationstatus
    label: reports.ws.applicationstatus
    type: string
    source: ws
    total: false
  - name: connectionholder
    label: reports.ws.connectionholder
    type: string
    source: ws
    total: false
  - name: ownerid
    label: reports.ws.ownerid
    type: string
    source: ws
    total: false
  - name: ownername
    label: reports.ws.ownername
    type: string
    source: ws
    total: false
  - name: contact
    label: reports.ws.contact
    type: string
    source: ws
    total: false
  query: |
    -- Use CTE to force query plan, compute & use CTE later
    with ptowner as
    (
        select split_part(string_agg(userid,','),',',1) as owneruserid,
        propertyid 
        from eg_pt_owner
        where tenantid=$tenantid and status='ACTIVE'
        group by propertyid
    ),
        ptaddress as
    (
        select 
        split_part(string_agg(locality,','),',',1) as locality,
        split_part(string_agg(concat(doorno,' ',plotno,' ',buildingname,' ',street,' ',city),'|'),'|',1) as address,
        propertyid 
        from eg_pt_address
        where tenantid=$tenantid
        group by propertyid
    )
        select connectionno, pt.landarea as plotsize,oldconnectionno,applicationno,pt.propertyid,ch.userid,ch.connectionholdertype,wsconnection.applicationstatus,users.name as connectionHolder,ptowner.owneruserid as ownerid,userowner.name as ownername,concat(address,' ',localityname)
        from eg_ws_connection wsconnection
       inner join eg_pt_property as pt on pt.id=wsconnection.property_id
       left outer join eg_ws_connectionholder as ch on ch.connectionid=wsconnection.id
       left outer join eg_user as users on ch.userid=users.uuid
       inner join ptowner on  ptowner.propertyid=pt.id
       left outer join eg_user as userowner on ptowner.owneruserid=userowner.uuid

       inner join ptaddress on ptaddress.propertyid=pt.id
       INNER JOIN eg_bndry_mohalla on eg_bndry_mohalla.localitycode=ptaddress.locality
      
- reportName: FieldCollectionSearchReportWS
  summary: Field Collection Search Report WS
  version: 1.0.0
  moduleName: rainmaker-ws
  additionalConfig:
    print:
      pdfPageSize: "A1"
  sourceColumns:
  - name: receiptnumber
    label: reports.ws.receiptnumber
    type: string
    source: ws
    total: false
  - name: receiptdate
    label: reports.ws.receiptdate
    type: string
    source: ws
    total: false
  - name: businessservice
    label: reports.ws.businessservice
    type: string
    source: ws
    total: false
  - name: amountpaid
    label: reports.ws.amountpaid
    type: string
    source: ws
    total: true
  - name: consumercode
    label: reports.ws.consumercode
    source: ws
    total: false
  - name: paymentstatus
    label: reports.ws.paymentstatus
    type: string
    source: ws
    total: false
  - name: paymentmode
    label: reports.ws.paymentmode
    type: string
    source: ws
    total: false
  - name: name
    label: reports.ws.name
    type: string
    source: ws
    total: false
  - name: mobilenumber
    label: reports.ws.mobilenumber
    type: string
    source: ws
    total: false
     searchParams:
  - name: fromDate
    label: reports.tl.fromDate
    type: epoch
    source: tl
    isMandatory: false
    searchClause: AND receiptdate >= $fromDate
  - name: toDate
    label: reports.tl.toDate
    type: epoch
    source: tl
    isMandatory: false
    searchClause: AND receiptdate <= $toDate 
  query: |
    -- Use CTE to force query plan, compute & use CTE later
    select receiptnumber,receiptdate,pd.businessservice,pd.amountpaid,consumercode,paymentstatus,paymentmode,usr.name,usr.mobilenumber
    from egcl_paymentdetail pd
    inner join egcl_bill as bill on bill.id=pd.billid
    INNER join egcl_payment as payment on payment.id=pd.paymentid
    inner join eg_user as usr on usr.id=payment.createdby::integer
    where bill.businessservice like 'SW%'
    ORDER BY pd.receiptdate DESC;
